# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: DOPRR.COM CD
on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      version:
        description: "the Version : major, minor, patch, prerelease"
        required: false
        options: ["major", "minor", "patch"]
        default: "patch"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      GITHUB_TOKEN: ${{ secrets.DOPRR_TOKEN }}
      NODE_VERSION: "v14.15.4"
      VERSION_TYPE: "patch"
      VERSION_TAG: ""
      commitmsg: ""
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        include:
          - name: back
            path: back
            localfolder: dist
            workspace: /home/runner/work/doprr.com/doprr.com/back
            installNpm: "true"
            restartService: "true"
          - name: front
            path: front
            workspace: /home/runner/work/doprr.com/doprr.com/front
            localfolder: dist
            installNpm: "false"
            restartService: "false"

    steps:
      - name: Display runner information
        run: |
          echo "CI = ${CI}"
          echo "GITHUB_ACTION = ${GITHUB_ACTION}"
          echo "GITHUB_ACTIONS = ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR = ${GITHUB_ACTOR}"
          echo "GITHUB_EVENT_NAME = ${GITHUB_EVENT_NAME}"
          echo "GITHUB_EVENT_PATH = ${GITHUB_EVENT_PATH}"
          echo "GITHUB_REF = ${GITHUB_REF}"
          echo "GITHUB_REPOSITORY = ${GITHUB_REPOSITORY}"
          echo "GITHUB_RUN_ID = ${GITHUB_RUN_ID}"
          echo "GITHUB_RUN_NUMBER = ${GITHUB_RUN_NUMBER}"
          echo "GITHUB_SHA = ${GITHUB_SHA}"
          echo "GITHUB_WORKFLOW = ${GITHUB_WORKFLOW}"
          echo "GITHUB_WORKSPACE = ${GITHUB_WORKSPACE}"
          echo "HOME = ${HOME}"
          echo "HOSTNAME = ${HOSTNAME}"
          echo "USER = ${USER}"
          echo "ID = $(id)"
          git --version
          git lfs version
          echo "Amount of free and used memory:"
          free -h
      - name: Display version to generate
        if: ${{ github.event.inputs.version }} != ''
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            echo "version to generate ${{ github.event.inputs.version }}"
            echo "::set-env name=VERSION_TYPE::${{ github.event.inputs.version }}"
          else
            echo "::set-env name=VERSION_TYPE::patch"
          fi

      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Generate new version
        run: |
          cd $GITHUB_WORKSPACE/${{ matrix.path }}
          npm version ${{env.VERSION_TYPE}}
      - name: Install packages for ${{ matrix.name }}
        run: |
          cd $GITHUB_WORKSPACE/${{ matrix.path }}
          npm ci
      - name: Build Project on prodruction mode
        run: |
          cd $GITHUB_WORKSPACE/${{ matrix.path }}
          npm run build --prod
        ### SECTION EXTRACT VERSION
      - name: Get new Version
        id: extract_version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: "${{env.GITHUB_WORKSPACE}}/${{ matrix.path }}"
      - name: Print the new generate version
        run: |
          echo "VERSION_TAG=${{steps.extract_version.outputs.current-version }}" >> $GITHUB_ENV
          echo "VERSION_TO_DELETE_IF_FAILS=${{steps.extract_version.outputs.current-version }}" >> $GITHUB_ENV
      ### SECTION GITHUB COMMIT
      - name: push
        uses: github-actions-x/commit@v2.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: develop
          commit-message: "${{ matrix.name }} add new version ${{ env.VERSION_TAG }}"
          rebase: "true"
          name: "${{env.GH_USERNAME}}@users.noreply.github.com"
          email: "${{env.GH_USERNAME}}"
          force-push: "true"
         
