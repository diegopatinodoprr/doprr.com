{"ast":null,"code":"import { DoprrOverContainerAnimations } from './doprr-over-container.animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction DoprrOverContainerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"@hover.done\", function DoprrOverContainerComponent_div_1_Template_div_animation_hover_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onDone($event);\n    });\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@hover\", ctx_r0.state);\n  }\n}\n\nconst _c0 = [\"*\", [[\"\", \"overlay\", \"\"]]];\nconst _c1 = [\"*\", \"[overlay]\"];\nexport let DoprrOverContainerComponent = /*#__PURE__*/(() => {\n  class DoprrOverContainerComponent {\n    constructor() {\n      this.state = '';\n    }\n\n    onHover(event) {\n      const direction = event.type === 'mouseenter' ? 'in' : 'out';\n      const host = event.target;\n      const w = host.offsetWidth;\n      const h = host.offsetHeight;\n      const x = (event.pageX - host.offsetLeft - w / 2) * (w > h ? h / w : 1);\n      const y = (event.pageY - host.offsetTop - h / 2) * (h > w ? w / h : 1);\n      const states = ['top', 'right', 'bottom', 'left'];\n      const side = Math.round((Math.atan2(y, x) * (180 / Math.PI) + 180) / 90 + 3) % 4;\n      this.state = `${direction}-${states[side]}`;\n    }\n\n    onDone(event) {\n      this.state = event.toState.startsWith('out-') ? '' : this.state;\n    }\n\n  }\n\n  DoprrOverContainerComponent.ɵfac = function DoprrOverContainerComponent_Factory(t) {\n    return new (t || DoprrOverContainerComponent)();\n  };\n\n  DoprrOverContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoprrOverContainerComponent,\n    selectors: [[\"app-doprr-over-container\"]],\n    hostBindings: function DoprrOverContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function DoprrOverContainerComponent_mouseenter_HostBindingHandler($event) {\n          return ctx.onHover($event);\n        })(\"mouseleave\", function DoprrOverContainerComponent_mouseleave_HostBindingHandler($event) {\n          return ctx.onHover($event);\n        });\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"overlay\", 4, \"ngIf\"], [1, \"overlay\"]],\n    template: function DoprrOverContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, DoprrOverContainerComponent_div_1_Template, 2, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state);\n      }\n    },\n    directives: [i1.NgIf],\n    styles: [\"[_nghost-%COMP%]{position:relative;background-color:#eeeeee0a;margin:4px;display:inline-block;width:calc(50% - 10px);height:calc(50% - 10px);overflow:hidden}.overlay[_ngcontent-%COMP%]{position:absolute;top:0;right:0;bottom:0;left:0;background-color:#eeeeee05;display:flex;align-items:center;justify-content:center;font-size:5em;color:#fff}\"],\n    data: {\n      animation: DoprrOverContainerAnimations\n    }\n  });\n  return DoprrOverContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}